// 0과 1로만 만들어진 문자열 S를 뒤집기
    // for문으로 0일 경우만 1로 바꾸면 되지 않나?
    // 연속된 하나 이상의 숫자를 뒤집어야 함 -> 즉 연속적으로 붙어있어야 함
    // 즉  0을 1로 바꾸는 경우와 1을 0으로 바꾸는 경우 두 가지 중 적은 수의 뒤집기를 선택해야 함

    function minFlips(S) { // 0을 뒤집어야 하는 경우와 1을 뒤집어야 하는 경우를 찾아 더 작은 수를 찾음
        // 뒤집는 횟수 초기화
        let flips0 = 0; // 0을 1로 바꾸는 경우
        let flips1 = 0; // 1을 0으로 바꾸는 경우
        
        for (let i = 0; i < S.length; i++) {
          //문자열을 순회하며 현재 숫자와 다음 숫자가 다른 경우, 뒤집기가 필요함
          // ex. 001로 1을 만나면 뒤집음

          if (S[i] !== S[i+1]) { // 현재 숫자와 다음 숫자가 같지 않을 경우
            if (S[i] === '0') { //  S[i]의 값이 '0'이라면
              flips0++; // 0그룹 +1
            } else { // 1이라면 
              flips1++; //1그룹 +1
            }
          }
        }
      
        return Math.min(flips0, flips1); // 그룹1과 그룹2를 비교해 작은 수를 리턴
      }
      
      console.log(minFlips('0001100')); // 1
      
